#!/bin/perl -w

use CDB_File;
use File::Basename;
use Getopt::Std;
use Mail::Address;
use Mail::Header;
use strict;

my $domainatom = qr/(?i:[a-z0-9](?:[a-z0-9-]*[a-z0-9]|))/i;
my $domainpattern = qr/$domainatom(?:\.$domainatom)*/;

sub usage() {
  print STDERR <<EOF;
Usage:  af-lookup -h TAG[,TAG] CDBFILE [CDBFILE]... <MESSAGE
Options:
  -h TAG[,TAG]...  use addresses from header lines with the specified tags
                   when checking the CDB files; by default From: and Sender:
                   headers are used
EOF
  exit 1;
}

sub HELP_MESSAGE { usage; }
sub VERSION_MESSAGE { usage; }

$0 = basename $0;
usage unless @ARGV > 0;
my %option = ();
getopts "h:", \%option or usage;

$SIG{__DIE__} = sub { die "$0: $_[0]"; };

my @address_tags = $option{h} ? split /,/, $option{h} : qw(from sender);
my @addresses;
my $headers = new Mail::Header \*STDIN;
foreach my $tag (@address_tags) {
    foreach my $header ($headers->get($tag)) {
      foreach (Mail::Address->parse($header)) {
        my $address = lc $_->address;
        push @addresses, $address if $address =~ /\@($domainpattern)$/;
      }
    }
  }

my @counts;
foreach my $cdb (@ARGV) {
  my $count = 0;
  if (tie my %cdb, 'CDB_File', $cdb) {
    foreach my $address (@addresses) {
      $count++ if exists $cdb{$address};
    }
  } else {
    warn "CDB_File tie failed: $!\n";
  }
  push @counts, $count;
}

print join(' ', @counts), "\n";
